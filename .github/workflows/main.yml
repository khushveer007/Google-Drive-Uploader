name: Windows 11 RDP VPS

on: 
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 9999

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download Latest ngrok
      run: |
        $latestRelease = Invoke-RestMethod -Uri "https://api.github.com/repos/inconshreveable/ngrok/releases/latest"
        $downloadUrl = ($latestRelease.assets | Where-Object { $_.name -like "*windows*amd64*" }).browser_download_url
        if (-not $downloadUrl) {
          # Fallback to direct download of latest stable version
          $downloadUrl = "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip"
        }
        Write-Host "Downloading ngrok from: $downloadUrl"
        Invoke-WebRequest -Uri $downloadUrl -OutFile ngrok.zip
        Expand-Archive ngrok.zip -DestinationPath ngrok

    - name: Authenticate ngrok
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable Remote Desktop
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1

    - name: Set Administrator Password
      run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "YourSecurePassword123!" -Force)

    - name: Create RDP Tunnel
      run: .\ngrok\ngrok.exe tcp 3389 --log=stdout

    - name: Keep session alive
      run: |
        while ($true) {
          Write-Host "Session is active - $(Get-Date)"
          Start-Sleep -Seconds 300
        }
