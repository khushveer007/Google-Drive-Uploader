name: Windows 11 RDP VPS - Fixed

on: 
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 9999

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download Latest ngrok
      run: |
        # Download the latest ngrok version directly from GitHub releases
        $latest = Invoke-RestMethod -Uri "https://api.github.com/repos/inconshreveable/ngrok/releases/latest"
        $downloadUrl = ($latest.assets | Where-Object { $_.name -like "*windows-amd64.zip" }).browser_download_url
        Invoke-WebRequest -Uri $downloadUrl -OutFile ngrok.zip
        Expand-Archive ngrok.zip -DestinationPath ngrok
        
    - name: Verify ngrok version
      run: .\ngrok\ngrok.exe version

    - name: Authenticate ngrok
      run: .\ngrok\ngrok.exe config add-authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable Remote Desktop
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1

    - name: Set Administrator Password
      run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "YourSecurePassword123!" -Force)

    - name: Create RDP Tunnel
      run: .\ngrok\ngrok.exe tcp 3389 --log=stdout

    - name: Keep session alive
      run: |
        while ($true) {
          Write-Host "Session is active - $(Get-Date)"
          Start-Sleep -Seconds 300
        }
